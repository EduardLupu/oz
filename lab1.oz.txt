%Exercise 1 (Absolute Value) Write a function Abs that computes the absolute value of a number. This should work for both integers and real numbers

declare
fun {Minus X}
    ~X
end

%{Browse {Minus 15}}

declare
fun {Max X Y}
    if X > Y then
        X
    else
        Y
    end
end

declare
fun {AbsoluteValue X}
   {Max X {Minus X}}
end

%{Browse {AbsoluteValue 15}}
%{Browse {AbsoluteValue ~15}}
%{Browse {AbsoluteValue 5.5}}
%{Browse {AbsoluteValue ~5.5}}


%Exercise 2 (Power) Compute nm where n is an integer and m is a natural number. 
%Hint: Use the following inductive definition:
%n0 = 1
%nm = n * nm-1

declare
fun {Pow N M}
   if M == 0 then
      1
   else
      N * {Pow N M-1}
   end
end

%{Browse {Pow 3 3}}
%{Browse {Pow 12 2}}
%{Browse {Pow 7 3}}
%{Browse {Pow 5 0}}

%Exercise 3 (Maximum Recursively) Compute the maximum of two natural numbers, knowing that the only allowed test with a conditional is the test whether a number is zero (that is, if N==0 then … else … end).
%Hint: Facts about the maximum (n>=0 and m>=0)
%max(n, m)=m, if n=0.
%max(n, m)=n, if m=0.
%max(n, m)=1 + max(n-1, m-1), otherwise.

declare
fun {MaximumRecursively N M}
   if N == 0 then
      M
   elseif M == 0 then
      N
   else
      1 + {MaximumRecursively N-1 M-1}
   end
end

{Browse {MaximumRecursively 15 25}}
{Browse {MaximumRecursively 35 5}}
{Browse {MaximumRecursively 5 5}}